<?xml version='1.0' encoding='UTF-8'?>
<!--
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
-->
<playlist xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../TKG/playlist.xsd">
	<include>../perf.mk</include>
	<test>
		<testCaseName>renaissance-jmh-AkkaUct</testCaseName>
		<command>
			$(JAVA_COMMAND) $(ADD_OPENS_CMD) $(JVM_OPTIONS) -Xlog:gc*:file=AkkaUct_gc.log -XX:+UseG1GC -Xms12G -Xmx12G -XX:ThreadPriorityPolicy=1 -XX:+AlwaysPreTouch -XX:+UseLargePages -XX:+UseTransparentHugePages -jar $(Q)$(TEST_RESROOT)$(D)renaissance-jmh.jar$(Q) -f 8 -prof gc -bm avgt -rf json -rff $(Q)$(REPORTDIR)$(D)AkkaUct.json$(Q) AkkaUct; $(TEST_STATUS)
		</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>perf</group>
		</groups>
	</test>
	<test>
		<testCaseName>renaissance-jmh-Als</testCaseName>
		<command>
			$(JAVA_COMMAND) $(ADD_OPENS_CMD) $(JVM_OPTIONS) -Xlog:gc*:file=Als_gc.log -XX:+UseG1GC -Xms12G -Xmx12G -XX:ThreadPriorityPolicy=1 -XX:+AlwaysPreTouch -XX:+UseLargePages -XX:+UseTransparentHugePages -jar $(Q)$(TEST_RESROOT)$(D)renaissance-jmh.jar$(Q) -f 17 -prof gc -bm avgt -rf json -rff $(Q)$(REPORTDIR)$(D)Als.json$(Q) Als; $(TEST_STATUS)
		</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>perf</group>
		</groups>
	</test>
	<test>
		<testCaseName>renaissance-jmh-ChiSquare</testCaseName>
		<command>
			$(JAVA_COMMAND) $(ADD_OPENS_CMD) $(JVM_OPTIONS) -Xlog:gc*:file=ChiSquare_gc.log -XX:+UseG1GC -Xms12G -Xmx12G -XX:ThreadPriorityPolicy=1 -XX:+AlwaysPreTouch -XX:+UseLargePages -XX:+UseTransparentHugePages -jar $(Q)$(TEST_RESROOT)$(D)renaissance-jmh.jar$(Q) -f 7 -prof gc -bm avgt -rf json -rff $(Q)$(REPORTDIR)$(D)ChiSquare.json$(Q) ChiSquare; $(TEST_STATUS)
		</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>perf</group>
		</groups>
	</test>
	<test>
		<testCaseName>renaissance-jmh-DecTree</testCaseName>
		<command>
			$(JAVA_COMMAND) $(ADD_OPENS_CMD) $(JVM_OPTIONS) -Xlog:gc*:file=DecTree_gc.log -XX:+UseG1GC -Xms12G -Xmx12G -XX:ThreadPriorityPolicy=1 -XX:+AlwaysPreTouch -XX:+UseLargePages -XX:+UseTransparentHugePages -jar $(Q)$(TEST_RESROOT)$(D)renaissance-jmh.jar$(Q) -f 4 -prof gc -bm avgt -rf json -rff $(Q)$(REPORTDIR)$(D)DecTree.json$(Q) DecTree; $(TEST_STATUS)
		</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>perf</group>
		</groups>
	</test>
	<test>
		<testCaseName>renaissance-jmh-Dotty</testCaseName>
		<command>
			$(JAVA_COMMAND) $(ADD_OPENS_CMD) $(JVM_OPTIONS) -Xlog:gc*:file=Dotty_gc.log -XX:+UseG1GC -Xms12G -Xmx12G -XX:ThreadPriorityPolicy=1 -XX:+AlwaysPreTouch -XX:+UseLargePages -XX:+UseTransparentHugePages -jar $(Q)$(TEST_RESROOT)$(D)renaissance-jmh.jar$(Q) -f 5 -prof gc -bm avgt -rf json -rff $(Q)$(REPORTDIR)$(D)Dotty.json$(Q) Dotty; $(TEST_STATUS)
		</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>perf</group>
		</groups>
	</test>
	<test>
		<testCaseName>renaissance-jmh-FinagleChirper</testCaseName>
		<command>
			$(JAVA_COMMAND) $(ADD_OPENS_CMD) $(JVM_OPTIONS) -Xlog:gc*:file=FinagleChirper_gc.log -XX:+UseG1GC -Xms12G -Xmx12G -XX:ThreadPriorityPolicy=1 -XX:+AlwaysPreTouch -XX:+UseLargePages -XX:+UseTransparentHugePages -jar $(Q)$(TEST_RESROOT)$(D)renaissance-jmh.jar$(Q) -f 5 -prof gc -bm avgt -rf json -rff $(Q)$(REPORTDIR)$(D)FinagleChirper.json$(Q) FinagleChirper; $(TEST_STATUS)
		</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>perf</group>
		</groups>
	</test>
	<test>
		<testCaseName>renaissance-jmh-FinagleHttp</testCaseName>
		<command>
			$(JAVA_COMMAND) $(ADD_OPENS_CMD) $(JVM_OPTIONS) -Xlog:gc*:file=FinagleHttp_gc.log -XX:+UseG1GC -Xms12G -Xmx12G -XX:ThreadPriorityPolicy=1 -XX:+AlwaysPreTouch -XX:+UseLargePages -XX:+UseTransparentHugePages -jar $(Q)$(TEST_RESROOT)$(D)renaissance-jmh.jar$(Q) -f 8 -prof gc -bm avgt -rf json -rff $(Q)$(REPORTDIR)$(D)FinagleHttp.json$(Q) FinagleHttp; $(TEST_STATUS)
		</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>perf</group>
		</groups>
	</test>
	<test>
		<testCaseName>renaissance-jmh-FjKmeans</testCaseName>
		<command>
			$(JAVA_COMMAND) $(ADD_OPENS_CMD) $(JVM_OPTIONS) -Xlog:gc*:file=FjKmeans_gc.log -XX:+UseG1GC -Xms12G -Xmx12G -XX:ThreadPriorityPolicy=1 -XX:+AlwaysPreTouch -XX:+UseLargePages -XX:+UseTransparentHugePages -jar $(Q)$(TEST_RESROOT)$(D)renaissance-jmh.jar$(Q) -f 8 -prof gc -bm avgt -rf json -rff $(Q)$(REPORTDIR)$(D)FjKmeans.json$(Q) FjKmeans; $(TEST_STATUS)
		</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>perf</group>
		</groups>
	</test>
	<test>
		<testCaseName>renaissance-jmh-FutureGenetic</testCaseName>
		<command>
			$(JAVA_COMMAND) $(ADD_OPENS_CMD) $(JVM_OPTIONS) -Xlog:gc*:file=FutureGenetic_gc.log -XX:+UseG1GC -Xms12G -Xmx12G -XX:ThreadPriorityPolicy=1 -XX:+AlwaysPreTouch -XX:+UseLargePages -XX:+UseTransparentHugePages -jar $(Q)$(TEST_RESROOT)$(D)renaissance-jmh.jar$(Q) -f 7 -prof gc -bm avgt -rf json -rff $(Q)$(REPORTDIR)$(D)FutureGenetic.json$(Q) FutureGenetic; $(TEST_STATUS)
		</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>perf</group>
		</groups>
	</test>
	<test>
		<testCaseName>renaissance-jmh-GaussMix</testCaseName>
		<command>
			$(JAVA_COMMAND) $(ADD_OPENS_CMD) $(JVM_OPTIONS) -Xlog:gc*:file=GaussMix_gc.log -XX:+UseG1GC -Xms12G -Xmx12G -XX:ThreadPriorityPolicy=1 -XX:+AlwaysPreTouch -XX:+UseLargePages -XX:+UseTransparentHugePages -jar $(Q)$(TEST_RESROOT)$(D)renaissance-jmh.jar$(Q) -f 8 -prof gc -bm avgt -rf json -rff $(Q)$(REPORTDIR)$(D)GaussMix.json$(Q) GaussMix; $(TEST_STATUS)
		</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>perf</group>
		</groups>
	</test>
	<test>
		<testCaseName>renaissance-jmh-LogRegression</testCaseName>
		<command>
			$(JAVA_COMMAND) $(ADD_OPENS_CMD) $(JVM_OPTIONS) -Xlog:gc*:file=LogRegression_gc.log -XX:+UseG1GC -Xms12G -Xmx12G -XX:ThreadPriorityPolicy=1 -XX:+AlwaysPreTouch -XX:+UseLargePages -XX:+UseTransparentHugePages -jar $(Q)$(TEST_RESROOT)$(D)renaissance-jmh.jar$(Q) -f 7 -prof gc -bm avgt -rf json -rff $(Q)$(REPORTDIR)$(D)LogRegression.json$(Q) LogRegression; $(TEST_STATUS)
		</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>perf</group>
		</groups>
	</test>
	<test>
		<testCaseName>renaissance-jmh-Mnemonics</testCaseName>
		<command>
			$(JAVA_COMMAND) $(ADD_OPENS_CMD) $(JVM_OPTIONS) -Xlog:gc*:file=Mnemonics_gc.log -XX:+UseG1GC -Xms12G -Xmx12G -XX:ThreadPriorityPolicy=1 -XX:+AlwaysPreTouch -XX:+UseLargePages -XX:+UseTransparentHugePages -jar $(Q)$(TEST_RESROOT)$(D)renaissance-jmh.jar$(Q) -f 4 -prof gc -bm avgt -rf json -rff $(Q)$(REPORTDIR)$(D)Mnemonics.json$(Q) Mnemonics; $(TEST_STATUS)
		</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>perf</group>
		</groups>
	</test>
	<test>
		<testCaseName>renaissance-jmh-MovieLens</testCaseName>
		<command>
			$(JAVA_COMMAND) $(ADD_OPENS_CMD) $(JVM_OPTIONS) -Xlog:gc*:file=MovieLens_gc.log -XX:+UseG1GC -Xms12G -Xmx12G -XX:ThreadPriorityPolicy=1 -XX:+AlwaysPreTouch -XX:+UseLargePages -XX:+UseTransparentHugePages -jar $(Q)$(TEST_RESROOT)$(D)renaissance-jmh.jar$(Q) -f 10 -prof gc -bm avgt -rf json -rff $(Q)$(REPORTDIR)$(D)MovieLens.json$(Q) MovieLens; $(TEST_STATUS)
		</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>perf</group>
		</groups>
	</test>
	<test>
		<testCaseName>renaissance-jmh-NaiveBayes</testCaseName>
		<command>
			$(JAVA_COMMAND) $(ADD_OPENS_CMD) $(JVM_OPTIONS) -Xlog:gc*:file=NaiveBayes_gc.log -XX:+UseG1GC -Xms12G -Xmx12G -XX:ThreadPriorityPolicy=1 -XX:+AlwaysPreTouch -XX:+UseLargePages -XX:+UseTransparentHugePages -jar $(Q)$(TEST_RESROOT)$(D)renaissance-jmh.jar$(Q) -f 10 -prof gc -bm avgt -rf json -rff $(Q)$(REPORTDIR)$(D)NaiveBayes.json$(Q) NaiveBayes; $(TEST_STATUS)
		</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>perf</group>
		</groups>
	</test>
	<test>
		<testCaseName>renaissance-jmh-PageRank</testCaseName>
		<command>
			$(JAVA_COMMAND) $(ADD_OPENS_CMD) $(JVM_OPTIONS) -Xlog:gc*:file=PageRank_gc.log -XX:+UseG1GC -Xms12G -Xmx12G -XX:ThreadPriorityPolicy=1 -XX:+AlwaysPreTouch -XX:+UseLargePages -XX:+UseTransparentHugePages -jar $(Q)$(TEST_RESROOT)$(D)renaissance-jmh.jar$(Q) -f 2 -prof gc -bm avgt -rf json -rff $(Q)$(REPORTDIR)$(D)PageRank.json$(Q) PageRank; $(TEST_STATUS)
		</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>perf</group>
		</groups>
	</test>
	<test>
		<testCaseName>renaissance-jmh-ParMnemonics</testCaseName>
		<command>
			$(JAVA_COMMAND) $(ADD_OPENS_CMD) $(JVM_OPTIONS) -Xlog:gc*:file=ParMnemonics_gc.log -XX:+UseG1GC -Xms12G -Xmx12G -XX:ThreadPriorityPolicy=1 -XX:+AlwaysPreTouch -XX:+UseLargePages -XX:+UseTransparentHugePages -jar $(Q)$(TEST_RESROOT)$(D)renaissance-jmh.jar$(Q) -f 2 -prof gc -bm avgt -rf json -rff $(Q)$(REPORTDIR)$(D)ParMnemonics.json$(Q) ParMnemonics; $(TEST_STATUS)
		</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>perf</group>
		</groups>
	</test>
	<test>
		<testCaseName>renaissance-jmh-Philosophers</testCaseName>
		<command>
			$(JAVA_COMMAND) $(ADD_OPENS_CMD) $(JVM_OPTIONS) -Xlog:gc*:file=Philosophers_gc.log -XX:+UseG1GC -Xms12G -Xmx12G -XX:ThreadPriorityPolicy=1 -XX:+AlwaysPreTouch -XX:+UseLargePages -XX:+UseTransparentHugePages -jar $(Q)$(TEST_RESROOT)$(D)renaissance-jmh.jar$(Q) -f 4 -prof gc -bm avgt -rf json -rff $(Q)$(REPORTDIR)$(D)Philosophers.json$(Q) Philosophers; $(TEST_STATUS)
		</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>perf</group>
		</groups>
	</test>
	<test>
		<testCaseName>renaissance-jmh-Reactors</testCaseName>
		<command>
			$(JAVA_COMMAND) $(ADD_OPENS_CMD) $(JVM_OPTIONS) -Xlog:gc*:file=Reactors_gc.log -XX:+UseG1GC -Xms12G -Xmx12G -XX:ThreadPriorityPolicy=1 -XX:+AlwaysPreTouch -XX:+UseLargePages -XX:+UseTransparentHugePages -jar $(Q)$(TEST_RESROOT)$(D)renaissance-jmh.jar$(Q) -f 8 -prof gc -bm avgt -rf json -rff $(Q)$(REPORTDIR)$(D)Reactors.json$(Q) Reactors; $(TEST_STATUS)
		</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>perf</group>
		</groups>
	</test>
	<test>
		<testCaseName>renaissance-jmh-RxScrabble</testCaseName>
		<command>
			$(JAVA_COMMAND) $(ADD_OPENS_CMD) $(JVM_OPTIONS) -Xlog:gc*:file=RxScrabble_gc.log -XX:+UseG1GC -Xms12G -Xmx12G -XX:ThreadPriorityPolicy=1 -XX:+AlwaysPreTouch -XX:+UseLargePages -XX:+UseTransparentHugePages -jar $(Q)$(TEST_RESROOT)$(D)renaissance-jmh.jar$(Q) -f 7 -prof gc -bm avgt -rf json -rff $(Q)$(REPORTDIR)$(D)RxScrabble.json$(Q) RxScrabble; $(TEST_STATUS)
		</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>perf</group>
		</groups>
	</test>
	<test>
		<testCaseName>renaissance-jmh-ScalaDoku</testCaseName>
		<command>
			$(JAVA_COMMAND) $(ADD_OPENS_CMD) $(JVM_OPTIONS) -Xlog:gc*:file=ScalaDoku_gc.log -XX:+UseG1GC -Xms12G -Xmx12G -XX:ThreadPriorityPolicy=1 -XX:+AlwaysPreTouch -XX:+UseLargePages -XX:+UseTransparentHugePages -jar $(Q)$(TEST_RESROOT)$(D)renaissance-jmh.jar$(Q) -f 7 -prof gc -bm avgt -rf json -rff $(Q)$(REPORTDIR)$(D)ScalaDoku.json$(Q) ScalaDoku; $(TEST_STATUS)
		</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>perf</group>
		</groups>
	</test>
	<test>
		<testCaseName>renaissance-jmh-ScalaKmeans</testCaseName>
		<command>
			$(JAVA_COMMAND) $(ADD_OPENS_CMD) $(JVM_OPTIONS) -Xlog:gc*:file=ScalaKmeans_gc.log -XX:+UseG1GC -Xms12G -Xmx12G -XX:ThreadPriorityPolicy=1 -XX:+AlwaysPreTouch -XX:+UseLargePages -XX:+UseTransparentHugePages -jar $(Q)$(TEST_RESROOT)$(D)renaissance-jmh.jar$(Q) -f 4 -prof gc -bm avgt -rf json -rff $(Q)$(REPORTDIR)$(D)ScalaKmeans.json$(Q) ScalaKmeans; $(TEST_STATUS)
		</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>perf</group>
		</groups>
	</test>
	<test>
		<testCaseName>renaissance-jmh-ScalaStmBench7</testCaseName>
		<command>
			$(JAVA_COMMAND) $(ADD_OPENS_CMD) $(JVM_OPTIONS) -Xlog:gc*:file=ScalaStmBench7_gc.log -XX:+UseG1GC -Xms12G -Xmx12G -XX:ThreadPriorityPolicy=1 -XX:+AlwaysPreTouch -XX:+UseLargePages -XX:+UseTransparentHugePages -jar $(Q)$(TEST_RESROOT)$(D)renaissance-jmh.jar$(Q) -f 2 -prof gc -bm avgt -rf json -rff $(Q)$(REPORTDIR)$(D)ScalaStmBench7.json$(Q) ScalaStmBench7; $(TEST_STATUS)
		</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>perf</group>
		</groups>
	</test>
	<test>
		<testCaseName>renaissance-jmh-Scrabble</testCaseName>
		<command>
			$(JAVA_COMMAND) $(ADD_OPENS_CMD) $(JVM_OPTIONS) -Xlog:gc*:file=Scrabble_gc.log -XX:+UseG1GC -Xms12G -Xmx12G -XX:ThreadPriorityPolicy=1 -XX:+AlwaysPreTouch -XX:+UseLargePages -XX:+UseTransparentHugePages -jar $(Q)$(TEST_RESROOT)$(D)renaissance-jmh.jar$(Q) -f 12 -prof gc -bm avgt -rf json -rff $(Q)$(REPORTDIR)$(D)Scrabble.json$(Q) Scrabble; $(TEST_STATUS)
		</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>perf</group>
		</groups>
	</test>
</playlist>